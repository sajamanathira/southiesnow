1] accept two inputs and display it.

identification division.
 program-id. prog01.
 data division.
 working-storage section.
 01 ws-input1 pic zz.
 77 ws-input2 pic zz.
 procedure division.
     accept ws-input1
     accept ws-input2
     display ws-input1
     display ws-input2 
     stop run.


****************


2] accept two numbers and add,sub,mult,div

identification division.
 program-id. prog02.
 data division.
 working-storage section.
 01 ws-inputs.
     03 ws-input1 pic 9(10).
     03 ws-input2 pic 9(10).
 01 ws-outputs.    
     03 ws-add pic 9(10).
     03 ws-sub pic 9(10).
     03 ws-div pic 9(07)v99.
     03 ws-mult pic 9(10).
     03 ws-add1 pic z(9)9.
     03 ws-div1 pic 9(07).99.
 01 ws-stop pic x(01).    
 procedure division.    
     accept ws-input1
     accept ws-input2
     display ws-input1
     display ws-input2
     display '----'
     add ws-input1 to ws-input2 giving ws-add. 
     move ws-add to ws-add1.
     display ws-add1     
     subtract ws-input1 from ws-input2 giving ws-sub.
     display ws-sub
     divide ws-input2 into ws-input1 giving ws-div.
     move ws-div to ws-div1
     display ws-div1
     multiply ws-input1 by ws-input2 giving ws-mult.
     display ws-mult
     display 'end of the program....!'
     accept ws-stop
     stop run.

*******************

     
3]accept date from system and formated form display.

identification division.
 program-id. prog03.
 data division.
 working-storage section.
 01 ws-input.
   03 ws-date.
      05 ws-date-yy        pic x(02).
      05 ws-date-mm        pic x(02).  
      05 ws-date-dd        pic x(04).                                   
   03 p-date. 
      05 ws-date-dd        pic x(02).
      05 filler           pic x(01) value '/'.
      05 ws-date-mm        pic x(02).  
      05 filler           pic x(01) value '/'.
      05 ws-date-yy        pic x(04).    
    03 ws-time.
     05  WS-TIME-HH        PIC x(02).                                   
     05  WS-TIME-MM        PIC x(02).                                
     05  WS-TIME-SS        PIC x(02).                                   
     05  WS-TIME-FS        PIC x(02).  
    03 p-time.
     05  ws-TIME-HH        PIC x(02).                                   
     05 filler            pic x(01) value '/'.
     05  ws-TIME-MM        PIC x(02).                                
     05 filler            pic x(01) value '/'.
     05  ws-TIME-SS        PIC x(02).                                   
     05 filler           pic x(01) value '/'.
     05  ws-TIME-FS        PIC x(02).  
    01 ws-stop pic x(10).  
 procedure division.    
     accept ws-date from date 
     accept ws-time from time    
     move corresponding ws-date to p-date.
     move corresponding ws-time to p-time.
     display 'date is:', ws-date 
     display 'date in format:', p-date
     display 'Time is:', ws-time
     display 'time in format:', p-time
     accept ws-stop
     stop run.

*********************

    
    
4]move data from one variable to another.

identification division. 
 program-id. prog04.
 data division.
 working-storage section.
 01 ws-input.
     05 ws-input1 pic x(10).
     05 ws-input2 pic x(10).
     05 ws-input3 pic x(10).
 02 ws-output.
     05 ws-output1 pic x(10).
     05 ws-output2 pic x(10).
     05 ws-output3 pic x(10).
   
 procedure division.
     accept ws-input1 
     move ws-input1 to ws-output1.
     display 'ws-input1' , ws-input1 , '**ws-output1', ws-output1
     accept ws-input2 
     move ws-input2 to ws-output2.
     display 'ws-input2' , ws-input2 , '**ws-output2' , ws-output2.
     accept ws-input3 
     move ws-input3 to ws-output3.
     display 'ws-input3' ,ws-input3,'**ws-output3',ws-output3.
     
     stop run.

**********************
     
5]accept two numbers and add,sub,mul.     
      identification division.
 program-id. prog05.
 data division.
 working-storage section.
 01 ws-input.
     02 input1 pic 9(10).
     02 input2 pic 9(08)v99.
 01 ws-output.    
     02 outadd pic 9(10).  
     02 outsub pic s9(10).
     02 outmult pic 9(10).
     02 outdiv pic 9(10)v99.
 01 ws-output1.    
     02 outadd1 pic 9(10).  
     02 outsub1 pic -9(10).
     02 outmult1 pic 9(10).
     02 outdiv1 pic 9(10).99.
    
 procedure division.    
     accept input1
     display input1     
     accept input2
     display input2     
     
     if input1 is numeric and input2 is numeric
         perform init-para
     else
         display 'invalid numbers.'
     end-if.
    
     stop run. 
     
 init-para.
     PERFORM ADDITION
     PERFORM SUBTRACTION
     PERFORM MULTIPLICATION
     PERFORM DIVISION1. 
     
 ADDITION.    
     ADD INPUT1 TO INPUT2 GIVING OUTADD
     MOVE OUTADD TO OUTADD1
     DISPLAY OUTADD1.
 SUBTRACTION.    
     SUBTRACT INPUT1 FROM INPUT2 GIVING OUTSUB
     MOVE OUTSUB TO OUTSUB1
     DISPLAY OUTSUB1.    
 MULTIPLICATION.    
     MULTIPLY INPUT1 BY INPUT2 GIVING OUTMULT
     MOVE OUTMULT TO OUTMULT1
     DISPLAY OUTMULT1.
 DIVISION1.        
     IF INPUT2 = 0
        DISPLAY 'UNDEFINE'
     ELSE   
        DIVIDE INPUT2 INTO INPUT1 GIVING OUTDIV
        MOVE OUTDIV TO OUTDIV1
        DISPLAY OUTDIV1.

*******************

             
6] display file in spool.

IDENTIFICATION DIVISION.
 PROGRAM-ID. PROG09.
 ENVIRONMENT DIVISION.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT EMPLOYEE-FILE ASSIGN TO 'EMPFILE.DAT'
          ORGANIZATION IS SEQUENTIAL
          ACCESS MODE IS SEQUENTIAL
          FILE STATUS IS WS-FILE-STAT.
 DATA DIVISION.
 FILE SECTION.
 FD  EMPLOYEE-FILE
     RECORD CONTAINS 50 CHARACTERS
     RECORDING MODE IS F.
 01  EMPLOYEE-RECORD.
     03 EMP-ID          PIC X(05).
     03 EMP-NAME        PIC X(15).
     03 EMP-LOC         PIC X(03).
     03 EMP-DOB.
        04  EMP-DOB-Y   PIC X(04).
        04  EMP-DOB-M   PIC X(02).
        04  EMP-DOB-D   PIC X(02).
     03 EMP-TECH        PIC X(05).
     03 EMP-EARN        PIC 9(05)V99.
     03 EMP-DEDN        PIC 9(05)V99.
 WORKING-STORAGE SECTION.
 01  EMPLOYEE-RECORD1.
     03 EMP-ID-O        PIC X(05).
     03 FILLER          PIC X(01)        VALUE ' '.
     03 EMP-NAME-O      PIC X(15).
     03 EMP-LOC-O       PIC X(03).
     03 FILLER          PIC X(01)        VALUE ' '.
     03 EMP-DOB-0.
        04 EMP-DOB-D-O     PIC X(02).
        04 FILLER          PIC X(01)        VALUE '/'.
        04 EMP-DOB-M-O     PIC X(02).
        04 FILLER          PIC X(01)        VALUE '/'.
        04 EMP-DOB-Y-O     PIC X(04).
     03 FILLER          PIC X(01)        VALUE ' '.
     03 EMP-TECH-O      PIC X(05).
     03 EMP-EARN-O      PIC ZZ,ZZ9.99.
     03 FILLER          PIC X(03)        VALUE '   '.
     03 EMP-DEDN-O      PIC ZZ,ZZ9.99.
     03 FILLER          PIC X(03)        VALUE '   '.
     03 EMP-SAL-O       PIC ZZ,ZZ9.99.
 01  EMP-TEARN-O      PIC $ZZZ,ZZ9.99.
 01  EMP-TDEDN-O      PIC $ZZ,ZZ9.99.
 01  EMP-TSAL-O       PIC $ZZZ,ZZ9.99.
 01  EMP-SAL            PIC 9(05)V99.
 01  EMP-TEARN          PIC 9(06)V99    VALUE ZERO.
 01  EMP-TDEDN          PIC 9(06)V99    VALUE ZERO.
 01  EMP-TSAL           PIC 9(06)V99    VALUE ZERO.
 01  WS-FILE-STAT       PIC X(02).
     88  OPEN-SUCCESS                VALUE '00'.
 01  WS-FILE-FLAG       PIC X(02)    VALUE 'NN'.
     88  END-OF-FILE                 VALUE '10'.
 01  COUNTI             PIC 9(02)    VALUE ZERO.
 PROCEDURE DIVISION.
 MAIN-PARA.
     PERFORM 1000-INIT-PARA
     PERFORM 1500-READ-PARA
     PERFORM 2000-PROCESS-PARA UNTIL  END-OF-FILE
     PERFORM 4000-END-PARA
     STOP RUN.
*
 1000-INIT-PARA.
     OPEN INPUT EMPLOYEE-FILE
     IF OPEN-SUCCESS
     DISPLAY 'FILE OPEN SUCCESS - 00'
     DISPLAY '=====================================',
             '====================================='
     DISPLAY 'ID    NAME           LOC DOB        TECH EARNING ',
             '     DEDUCTION  TOTAL SAL'
     DISPLAY '-------------------------------------',
             '-------------------------------------'
     END-IF.
*
 1500-READ-PARA.
     READ EMPLOYEE-FILE
        AT END
           MOVE '10' TO WS-FILE-FLAG
     END-READ.
*
 2000-PROCESS-PARA.
     PERFORM 3000-COPY
     DISPLAY EMPLOYEE-RECORD1
     ADD 1 TO COUNTI
     PERFORM 1500-READ-PARA.
*
 3000-COPY.
     MOVE EMP-ID TO EMP-ID-O
     MOVE EMP-NAME TO EMP-NAME-O
     MOVE EMP-LOC TO EMP-LOC-O
     MOVE EMP-TECH TO EMP-TECH-O
     MOVE EMP-EARN TO EMP-EARN-O
     MOVE EMP-DEDN TO EMP-DEDN-O
     MOVE EMP-TEARN TO EMP-TEARN-O
     MOVE EMP-TDEDN TO EMP-TDEDN-O
     MOVE EMP-TSAL TO EMP-TSAL-O
     SUBTRACT EMP-DEDN FROM EMP-EARN GIVING EMP-SAL
     MOVE EMP-SAL TO EMP-SAL-O
     MOVE EMP-DOB-Y TO EMP-DOB-Y-O
     MOVE EMP-DOB-M TO EMP-DOB-M-O
     MOVE EMP-DOB-D TO EMP-DOB-D-O
     ADD EMP-EARN TO EMP-TEARN
     ADD EMP-DEDN TO EMP-TDEDN
     ADD EMP-SAL TO EMP-TSAL.
*
 4000-END-PARA.
     CLOSE EMPLOYEE-FILE
     DISPLAY '-------------------------------------',
             '-------------------------------------'
     DISPLAY 'END FILE REACHED - ', WS-FILE-FLAG
     DISPLAY '-------------------------------------',
             '-------------------------------------'
     DISPLAY 'TOTAL EMP = ', COUNTI, '  ',
             '                       ', EMP-TEARN-O, '  ',
             EMP-TDEDN-O, ' ', EMP-TSAL-O.


*********************


10]display report:

IDENTIFICAtiON DIVISION.
 PROGRAM-ID. sort.
 ENVIRONMENT DIVISION.
 INPUT-OUTPUT section.
 FILE-CONTROL.
     SELECT EMPLOYEE-FILE ASSIGN TO 'EMPFILE.DAT'
          ORGANIZATION IS SEQUENTIAL
          ACCESS MODE IS SEQUENTIAL
          FILE STATUS IS WS-FILE-STAT.
     SELECT REPORT-FILE ASSIGN TO 'REPFILE.REP'
          ORGANIZATION IS SEQUENTIAL
          ACCESS MODE IS SEQUENTIAL
          FILE STATUS IS WS-REP-STAT.
 DATA DIVISION.
 FILE SECTION.
 FD  EMPLOYEE-FILE
     RECORD CONTAINS 50 CHARACTERS
     RECORDING MODE IS F.
 01  EMPLOYEE-RECORD.
     03 EMP-ID          PIC X(05).
     03 EMP-NAME        PIC X(15).
     03 EMP-LOC         PIC X(03).
     03 EMP-DOB.
        04  EMP-DOB-Y   PIC X(04).
        04  EMP-DOB-M   PIC X(02).
        04  EMP-DOB-D   PIC X(02).
     03 EMP-TECH        PIC X(05).
     03 EMP-EARN        PIC 9(05)V99.
     03 EMP-DEDN        PIC 9(05)V99.
 FD  REPORT-FILE
     RECORD CONTAINS 80 CHARACTERS
     RECORDING MODE IS F.
 01  REPORT-RECORD PIC X(80).
 WORKING-STORAGE SECTION.
 01  HEADING-LINE1.
     03  FILLER           PIC X(06) VALUE 'DATE:'.
     03  P-DATE           PIC X(10) VALUE SPACES.
     03  FILLER           PIC X(50) VALUE SPACES.
     03  FILLER           PIC X(06) VALUE 'TIME:'.
     03  P-TIME.
         05  WS-TIME-HH   PIC 9(02) VALUE ZERO.
         05  FILLER       PIC X(01) VALUE ':'.
         05  WS-TIME-MM   PIC 9(02) VALUE ZERO.
         05  FILLER       PIC X(01) VALUE ':'.
         05  WS-TIME-SS   PIC 9(02) VALUE ZERO.
 01  HEADING-LINE2.
     03  FILLER           PIC X(20) VALUE 'LISTING OF EMPLOYEES'.
     03  FILLER           PIC X(46) VALUE SPACES.
     03  FILLER           PIC X(06) VALUE 'PAGE:'.
     03  P-PAGE           PIC Z9    VALUE ZERO.
 01  DETAIL-LINE.
     03  P-ID             PIC X(05)      VALUE SPACES.
     03  FILLER           PIC X(01)      VALUE SPACES.
     03  P-NAME           PIC X(15)      VALUE SPACES.
     03  FILLER           PIC X(01)      VALUE SPACES.
     03  P-LOC            PIC X(03)      VALUE SPACES.
     03  FILLER           PIC X(01)      VALUE SPACES.
     03  P-DOB            PIC X(10)      VALUE SPACES.
     03  FILLER           PIC X(01)      VALUE SPACES.
     03  P-TECH           PIC X(05)      VALUE SPACES.
     03  FILLER           PIC X(01)      VALUE SPACES.
     03  P-EARN           PIC ZZZ,ZZ9.99 VALUE ZERO.
     03  FILLER           PIC X(01)      VALUE SPACES.
     03  P-DEDN           PIC ZZZ,ZZ9.99 VALUE ZERO.
     03  FILLER           PIC X(01)      VALUE SPACES.
     03  P-SAL            PIC ZZZ,ZZ9.99 VALUE ZERO.
 01  HEADING-LINE3.
     03  FILLER           PIC X(06) VALUE 'ID'.
     03  FILLER           PIC X(16) VALUE 'NAME'.
     03  FILLER           PIC X(04) VALUE 'LOC'.
     03  FILLER           PIC X(11) VALUE 'BIRTH DATE'.
     03  FILLER           PIC X(06) VALUE 'TECH'.
     03  FILLER           PIC X(11) VALUE '  EARNINGS '.
     03  FILLER           PIC X(11) VALUE 'DEDUCTIONS '.
     03  FILLER           PIC X(10) VALUE ' TOTAL SAL'.
 01  WS-VARIABLES.
     03  WS-DATE          PIC 9(08)    VALUE ZERO.
     03  WS-TIME                       VALUE ZERO.
         05  WS-TIME-HH   PIC 9(02).
         05  WS-TIME-MM   PIC 9(02).
         05  WS-TIME-SS   PIC 9(02).
         05  WS-TIME-FS   PIC 9(02).
     03  PAGE-COUNT       PIC 9(02)    VALUE ZERO.
     03  LINE-COUNT       PIC 9(01)    VALUE 5.
     03  WS-SAL           PIC 9(06)V99 VALUE ZERO.
 01  WS-FILE-STAT         PIC X(02).
      88  OPEN-SUCCESS                 VALUE '00'.
 01  WS-FILE-FLAG         PIC X(01)   VALUE 'N'.
      88  END-OF-FILE                 VALUE 'Y'.
 01  WS-REP-STAT         PIC X(02).
      88  OPEN-SUCCESS                 VALUE '00'.
 01  WS-REP-FLAG         PIC X(02)     VALUE 'NN'.
      88  END-OF-FILE1                 VALUE '10'.
 01  WS-TOT-EMP          PIC 9(02)     VALUE ZERO.
 PROCEDURE DIVISION.
 0000-MAIN-PARA.
     PERFORM 1000-INIT-PARA
     PERFORM 2000-DATE-TIME-PARA
     PERFORM 3000-READ-PARA
     PERFORM 4000-PROCESS-PARA  UNTIL  END-OF-FILE
     PERFORM 9000-END-PARA
     STOP RUN.
 1000-INIT-PARA.
     OPEN INPUT EMPLOYEE-FILE
     OPEN OUTPUT REPORT-FILE.
 2000-DATE-TIME-PARA.
     ACCEPT WS-DATE FROM DATE
     ACCEPT WS-TIME FROM TIME
     MOVE WS-DATE(1:4)   TO P-DATE(7:4)
     MOVE WS-DATE(5:2)   TO P-DATE(4:2)
     MOVE WS-DATE(7:2)   TO P-DATE(1:2)
     MOVE '/'            TO P-DATE(3:1)
                            P-DATE(6:1).
     MOVE CORRESPONDING WS-TIME TO P-TIME.
 3000-READ-PARA.
     READ EMPLOYEE-FILE
        AT END
           MOVE 'Y' TO WS-FILE-FLAG
        NOT AT END
           ADD 1 TO WS-TOT-EMP
     END-READ.
 4000-PROCESS-PARA.
     PERFORM 5000-MOVE-PARA
* ADD 1 TO TOTAL NUMBER OF LINE TO BE PRINTED     
     IF LINE-COUNT > 4
        PERFORM 6000-HEADING-PARA
     END-IF
     WRITE REPORT-RECORD FROM DETAIL-LINE
     ADD 1 TO LINE-COUNT
     PERFORM 3000-READ-PARA.
 5000-MOVE-PARA.
     MOVE EMP-ID         TO P-ID.
     MOVE EMP-NAME       TO P-NAME.
     MOVE EMP-LOC        TO P-LOC.
     MOVE EMP-TECH       TO P-TECH.
     MOVE EMP-EARN       TO P-EARN.
     MOVE EMP-DEDN       TO P-DEDN.
     MOVE EMP-DOB(1:4)   TO P-DOB(7:4)
     MOVE EMP-DOB(5:2)   TO P-DOB(4:2)
     MOVE EMP-DOB(7:2)   TO P-DOB(1:2)
     MOVE '/'            TO P-DOB(3:1)
                            P-DOB(6:1).
     COMPUTE WS-SAL = EMP-EARN - EMP-DEDN
     MOVE WS-SAL         TO P-SAL.
 6000-HEADING-PARA.
     ADD 1 TO PAGE-COUNT
     MOVE PAGE-COUNT TO P-PAGE
     WRITE REPORT-RECORD FROM HEADING-LINE1 AFTER PAGE.
     WRITE REPORT-RECORD FROM HEADING-LINE2.
     WRITE REPORT-RECORD FROM HEADING-LINE3 AFTER 2.
     MOVE ZERO TO LINE-COUNT.
 9000-END-PARA.
     CLOSE EMPLOYEE-FILE
     CLOSE REPORT-FILE.


******************************


11] enter xxxx to stop addition of 2 numbers:

IDENTIFICATION DIVISION.
 PROGRAM-ID. PROG10.
 DATA DIVISION.
 WORKING-STORAGE SECTION.
 01  WS-OUTPUTS.
     03  WS-C           PIC 9(03)    VALUE ZERO.
     03  WS-D           PIC S9(02)   VALUE ZERO.
     03  WS-E           PIC 9(04)    VALUE ZERO.
     03  WS-F           PIC 9(02)V99 VALUE ZERO.
 01  WS-DISPLAY.
     03  WS-C-O         PIC ZZ9.
     03  WS-D-O         PIC -9(02).
     03  WS-E-O         PIC $Z,ZZ9.
     03  WS-F-O         PIC 9(02).99.
 01  WS-INPUTS                       VALUE ZERO.
     88  END-OF-DATA                 VALUE 'XXXX'.
     03  WS-A           PIC 9(02).
     03  WS-B           PIC 9(02).
 PROCEDURE DIVISION.
 MAIN-PARA.
     PERFORM 1000-INIT-PARA
     PERFORM 2000-PROCESS-PARA UNTIL  END-OF-DATA
     PERFORM 8000-END-PARA
     STOP RUN.
*
 1000-INIT-PARA.
     DISPLAY 'INPUT 4 BYTES OF INPUT IF WANT TO END',
             ' ENTER XXXX'. 
     ACCEPT WS-INPUTS.
*
 2000-PROCESS-PARA.
     IF WS-A IS NUMERIC AND WS-B IS NUMERIC
        PERFORM 3000-CALCULATE-PARA
     ELSE
        DISPLAY 'INPUTS ARE NOT NUMERIC'
     END-IF
     ACCEPT WS-INPUTS.
*
 3000-CALCULATE-PARA.
     INITIALIZE WS-DISPLAY, WS-OUTPUTS
     PERFORM 4000-PARA-ADD
     PERFORM 5000-PARA-SUBTRACT
     PERFORM 6000-PARA-MULTIPLY
     PERFORM 7000-PARA-DIVIDE
     DISPLAY '==========='.
*
 4000-PARA-ADD.
     DISPLAY '==========='
     ADD WS-A TO WS-B GIVING WS-C
     MOVE WS-C TO WS-C-O
     DISPLAY 'ADD  ', WS-C-O.
*
 5000-PARA-SUBTRACT.
     DISPLAY '==========='
     SUBTRACT WS-A FROM WS-B GIVING WS-D
     MOVE WS-D TO WS-D-O
     DISPLAY 'SUB  ', WS-D-O.
*
 6000-PARA-MULTIPLY.
     DISPLAY '==========='
     MULTIPLY WS-A BY WS-B GIVING WS-E
     MOVE WS-E TO WS-E-O
     DISPLAY 'MULT ', WS-E-O.
*
 7000-PARA-DIVIDE.
     DISPLAY '==========='
     IF WS-B = ZERO
        DISPLAY 'ZERO DIVIDE NOT POSSIBLE - ZERO CHECK'
     ELSE
        DIVIDE WS-A BY WS-B GIVING WS-F
        MOVE WS-F TO WS-F-O
        DISPLAY 'DIV  ', WS-F-O
     END-IF.
*
 8000-END-PARA.
     DISPLAY 'END OF DATA, QUITTING PROGRAM. BYE, BYE!!'.

******************************
 
12] DISPLAY REPORT WHICH CONTAINS TECHNOLOGY FROM SAME LOCATION ON DIFFERENT PAGE.


IDENTIFICATION DIVISION.                                  
 PROGRAM-ID. HARD.                                       
 ENVIRONMENT DIVISION.                                     
 INPUT-OUTPUT SECTION.                                     
 FILE-CONTROL.                                             
      SELECT EMP-FILE-IN  ASSIGN TO 'EMPFILE.DAT'.              
      SELECT WORK-FILE ASSIGN TO 'WRKFILE.dat'.                  
      SELECT EMPLOYEE-FILE ASSIGN TO 'SORTFILE.dat'               
      ORGANIZATION IS SEQUENTIAL                           
      ACCESS MODE IS SEQUENTIAL                            
      FILE STATUS IS WS-EMP-STAT.                          
      SELECT OUT-FILE ASSIGN TO 'REPFILE1.REP'                    
      ORGANIZATION IS SEQUENTIAL                           
      ACCESS MODE IS SEQUENTIAL                            
      FILE STATUS IS WS-OUT-STAT.  
 DATA DIVISION.                                            
 FILE SECTION.                                             
 FD  EMP-FILE-IN                                           
     RECORD CONTAINS 50 CHARACTERS
         RECORDING MODE IS F.                            
 01 EMP-FILE-RECORD        pic x(50).                           
 SD  WORK-FILE.                                      
 01 WORK-RECORD.                                    
     03 FILLER                PIC X(20).
     03 W-EMP-LOC             PIC X(03).             
     03 FILLER                PIC X(08).             
     03 W-EMP-TECH            PIC X(04).             
     03 FILLER                PIC X(15).             
 FD  employee-file                                  
        RECORD CONTAINS 50 CHARACTERS                   
        RECORDING MODE IS F.                            
 01  EMP-RECORD.                      
     03  EMP-ID    PIC X(05).        
     03  EMP-NAME  PIC X(15).        
     03  EMP-LOC   PIC X(03).        
     03  EMP-DOB.                    
         05 EMP-DOB-YYYY PIC X(04).  
         05 emp-dob-mm   pic x(02).  
         05 EMP-DOB-DD PIC X(02).            
       03  EMP-TECH  PIC X(05).      
       03  EMP-EARN  PIC 9(05)V99.   
       03  EMP-DEDN  PIC 9(05)V99.                                      
 FD  OUT-FILE                                        
         RECORD CONTAINS 80 CHARACTERS                   
         RECORDING MODE IS F.                            
 01  OUT-RECORD PIC X(80).       
 WORKING-STORAGE SECTION.                            
 01  WS-EMP-STAT  PIC X(02).                         
    88  OPEN-EMP-SUCCESS        VALUE '00'.             
  01  WS-EMP-FLAG  PIC X(01) VALUE 'N'.                    
      88  END-OF-FILE        VALUE 'Y'.                  
  01  WS-OUT-STAT  PIC X(02).                              
      88  OPEN-SUCCESS        VALUE '00'.                  
  01  WS-OUT-FLAG  PIC X(01) VALUE 'N'.                    
      88  END-OUT-FILE         VALUE 'Y'.                   
 01 TEMP-TECH     PIC X(05)    VALUE SPACES.                              
 01 TEMP-LOC      PIC X(03)    VALUE SPACES.
  01  HEADING-LINE1.                                       
      03  FILLER           PIC X(06) VALUE 'DATE:'.        
      03  P-DATE.                                          
          05 WS-DATE-DD     PIC X(02) VALUE ZERO.          
          05 FILLER         PIC X(01) VALUE '/'.           
          05 WS-DATE-MM     PIC X(02) VALUE ZERO.          
          05 FILLER         PIC X(01) VALUE '/'.           
          05 WS-DATE-YY   PIC X(04) VALUE ZERO.          
      03  FILLER            PIC X(50) VALUE SPACES.        
      03  FILLER            PIC X(06) VALUE 'TIME:'.       
      03  P-TIME.                                          
          05 WS-TIME-HH     PIC X(02) VALUE ZERO. 
          05 filler         pic x(01) value ':'.
          05 ws-TIME-MM     PIC X(02) VALUE ZERO.
          05 FILLER         PIC X(01)  VALUE ':'.
          05 WS-TIME-SS     PIC X(02) VALUE ZERO.
 01  HEADING-LINE2.                                                     
     03  FILLER            PIC X(20) VALUE 'LISTING OF EMPLOYEES'.      
     03  FILLER            PIC X(46) VALUE SPACES.                      
     03  FILLER            PIC  X(06) VALUE 'PAGE:'.                    
     03  PAGENO            PIC X(02) VALUE '01'.                        
 01  heading-line3.    
     03  FILLER            PIC X(09) VALUE 'LOCATION:'.
     03  H-LOC             PIC X(03) VALUE SPACES.
     03  FILLER            PIC X(01) VALUE SPACES.
     03  FILLER            PIC X(11) VALUE 'TECHNOLOGY:'.
     03  H-TECH            PIC X(05)  VALUE SPACES.
01  DETAIL-LINE.                                                       
     03  P-ID              PIC X(05) VALUE SPACES.                      
     03  FILLER            PIC X(01) VALUE SPACES.                      
     03  P-NAME            PIC X(15) VALUE SPACES.                      
     03  FILLER            PIC X(05) VALUE SPACES.                    
     03  P-DOB.                 
         05 EMP-DOB-DD     PIC X(02) VALUE ZERO.                        
         05 FILLER         PIC X(01) VALUE '/'.                         
         05 EMP-DOB-MM     PIC X(02) VALUE ZERO. 
         05 FILLER         PIC X(01) VALUE '/'.                
         05 EMP-DOB-YYYY   PIC X(02) VALUE ZERO.               
     03  FILLER            PIC X(06) VALUE SPACES.                      
     03  P-EARN            PIC ZZZ,ZZ9.99 VALUE ZERO.          
     03  FILLER            PIC X(01) VALUE SPACES.             
     03  P-DEDN            PIC ZZZ,ZZ9.99 VALUE ZERO.          
     03  FILLER            PIC X(1) VALUE SPACES.              
     03  P-SAL             PIC ZZZ,ZZ9.99 VALUE ZERO.          
 01  HEADING-LINE4.                                            
     03  FILLER    PIC X(06) VALUE 'ID'.                       
     03  FILLER    PIC X(16) VALUE 'NAME'.                     
     03  FILLER    PIC X(04) VALUE SPACES.                    
     03  FILLER    PIC X(11) VALUE 'BIRTH DATE'.               
     03  FILLER    PIC X(06) VALUE SPACES.
     03  FILLER    PIC X(11) VALUE '  EARNINGS '.                 
     03  FILLER    PIC X(11) VALUE 'DEDUCTIONS '.                 
     03  FILLER    PIC X(10) VALUE 'TOTAL SAL '.                
 01 TECH-DISPLAY.
    03 FILLER      PIC X(15)   VALUE 'TECH EMPLOYEE- '.   
    03 TECH-TOTALS  PIC 9(02)  VALUE ZERO. 
    03 FILLER       PIC X(11) VALUE ' TECH EARN-'.
    03 EMP-TOTAL-EARN PIC 9(05)V99 VALUE ZERO.
    03 FILLER       PIC X(11) VALUE ' TECH DEDN-'.
    03 EMP-TOTAL-DEDN PIC 9(05)V99 VALUE ZERO.
    03 FILLER       PIC X(11) VALUE '  TECH SAL-'.
    03 EMP-TOTAL-SAL PIC 9(05)V99 VALUE ZERO.     
 01 LOC-DISPLAY.
     03 FILLER         PIC X(14) VALUE 'LOC EMPLOYEE- '.
     03 LOC-TOTALS  PIC 9(02) VALUE ZERO.
     03 FILLER       PIC X(11) VALUE ' TECH EARN-'.
     03 LOC-TOTAL-EARN PIC 9(05)V99 VALUE ZERO.
     03 FILLER       PIC X(11) VALUE ' TECH DEDN-'.
     03 LOC-TOTAL-DEDN PIC 9(05)V99 VALUE ZERO.
     03 FILLER       PIC X(10) VALUE '  LOC SAL-'.
     03 LOC-TOTAL-SAL PIC 9(05)V99 VALUE ZERO.     
 01  WS-TOT-EMPLOYEE PIC 9(02) VALUE ZERO.                        
 01  WS-VARIABLES.                                                
     03 WS-DATE            VALUE ZERO.                            
        05 WS-DATE-YY PIC 9(02).                                
        05 WS-DATE-MM PIC 9(02).                                  
        05 WS-DATE-DD PIC 9(02).                                  
     03 WS-TIME            VALUE ZERO.                            
        05  WS-TIME-HH PIC 9(02).                                 
        05  WS-TIME-MM PIC 9(02).                                 
        05  WS-TIME-SS PIC 9(02).                                 
     03 PAGE-COUNT PIC 9(02) VALUE ZERO.                          
     03 LINE-COUNT PIC 9(02) VALUE 06.                       
     03 WS-SAL     PIC 9(06)V99 VALUE ZERO.
 01 LAST-DISPLAY.                                                 
      03 DIPLAY PIC X(25) VALUE ' LIST NO OF EMPLOYEE : '.        
      03 WS-TOTAL-EMP    PIC 9(03) VALUE ZERO.
      03 FILLER PIC X(18) VALUE SPACES.   
      03 WS-TOTAL-EARN PIC 9(7)V99 VALUE ZERO.
      03 FILLER       PIC X(01) VALUE SPACES.
      03 WS-TOTAL-DEDN PIC 9(7)V99 VALUE ZERO.
      03 FILLER       PIC X(01) VALUE SPACES.
       03 WS-TOTAL-SAL PIC 9(7)V99 VALUE ZERO.
 PROCEDURE DIVISION.   
 MAIN-PARA.
     PERFORM 1000-INIT-PARA                     
     PERFORM 2000-PROCESS-PARA UNTIL END-OF-FILE
     PERFORM 9000-END-PARA
     STOP RUN.
 1000-INIT-PARA.                                                
       PERFORM 1111-SORT-PARA                                   
       OPEN input employee-file.                                 
       OPEN OUTPUT OUT-FILE.                                    
       DISPLAY WS-EMP-STAT.                                     
       DISPLAY WS-OUT-STAT.                                     
       IF OPEN-EMP-SUCCESS                                      
          DISPLAY 'FILE HAS BEEN SUCCESSFULLY OPENED'           
       END-IF       
     PERFORM 1200-DATE-TIME-PARA.              
     PERFORM 1500-READ-PARA.                   
       MOVE EMP-LOC  TO TEMP-LOC, H-LOC 
       MOVE EMP-TECH TO TEMP-TECH, H-TECH.
 1111-SORT-PARA.                                 
      SORT WORK-FILE                             
           ON ASCENDING KEY W-EMP-LOC            
           ON ASCENDING KEY W-EMP-TECH              
           USING EMP-FILE-IN                     
           GIVING EMPLOYEE-FILE.         
  1200-DATE-TIME-PARA.                            
      ACCEPT WS-DATE FROM DATE .         
      ACCEPT WS-TIME FROM TIME.                  
      MOVE CORR WS-DATE TO P-DATE.               
      MOVE CORR WS-TIME TO P-TIME.               
 1500-READ-PARA.                                 
        READ EMPLOYEE-FILE                       
       AT END                                    
          MOVE 'Y' TO WS-EMP-FLAG                
       NOT AT END                                
          ADD 1 TO WS-TOT-EMPLOYEE  
       END-READ.                        
  2000-PROCESS-PARA.                                
      PERFORM COMMAND-PARA.
     PERFORM 3000-MOVE-PARA.
         IF LINE-COUNT > 5                          
         PERFORM 2500-HEADING-PARA                
         END-IF                                      
             WRITE OUT-RECORD FROM DETAIL-LINE.          
             ADD 1 TO TECH-TOTALS.  
             ADD EMP-EARN TO EMP-TOTAL-EARN.
             ADD EMP-DEDN TO EMP-TOTAL-DEDN.
             add ws-sal to emp-total-sal.
       ADD 1 TO LINE-COUNT.                       
       PERFORM 1500-READ-PARA.                     
   2500-HEADING-PARA.                                
       ADD 1 TO PAGE-COUNT.                        
       MOVE ZERO TO LINE-COUNT                     
       MOVE PAGE-COUNT TO PAGENO.                  
       WRITE OUT-RECORD FROM HEADING-LINE1         
             AFTER ADVANCING PAGE                 
       WRITE OUT-RECORD FROM HEADING-LINE2.         
       WRITE OUT-RECORD FROM HEADING-LINE3         
         WRITE OUT-RECORD FROM HEADING-LINE4
             AFTER ADVANCING 2 LINES.                    
 COMMAND-PARA.            
     IF EMP-LOC = TEMP-LOC
        IF EMP-TECH = TEMP-TECH
            NEXT SENTENCE
       ELSE     
          PERFORM TECH-CHANGE-PARA
       END-IF   
     ELSE   
          PERFORM TECH-CHANGE-PARA
          PERFORM LOC-CHANGE-PARA  
      END-IF .   
    
 3000-MOVE-PARA.                                     
        MOVE EMP-ID TO P-ID.                         
        MOVE EMP-NAME TO P-NAME.                
        MOVE EMP-EARN TO P-EARN.                     
        MOVE EMP-DEDN TO P-DEDN.                     
        MOVE CORR EMP-DOB TO P-DOB.                  
        COMPUTE WS-SAL = EMP-EARN - EMP-DEDN         
        MOVE WS-SAL TO P-SAL.                        
        ADD WS-SAL TO WS-TOTAL-SAL.                  
        ADD EMP-EARN TO WS-TOTAL-EARN.               
        ADD EMP-DEDN TO WS-TOTAL-DEDN.               
  TECH-CHANGE-PARA.      
       MOVE EMP-TECH TO TEMP-TECH, H-TECH. 
       MOVE 6 TO LINE-COUNT
       WRITE OUT-RECORD FROM TECH-DISPLAY
       ADD  TECH-TOTALS TO LOC-TOTALS
      ADD  EMP-TOTAL-EARN TO LOC-TOTAL-EARN         
       ADD  EMP-TOTAL-DEDN TO LOC-TOTAL-DEDN 
       ADD  EMP-TOTAL-SAL TO LOC-TOTAL-SAL
       MOVE ZERO TO TECH-TOTALS
       MOVE ZERO TO EMP-TOTAL-EARN
       MOVE ZERO TO EMP-TOTAL-DEDN
       MOVE ZERO TO EMP-TOTAL-SAL.
  LOC-CHANGE-PARA.      
       MOVE EMP-LOC TO TEMP-LOC, H-LOC. 
       MOVE 6 TO LINE-COUNT  
       WRITE OUT-RECORD FROM LOC-DISPLAY
       ADD  LOC-TOTALS TO  WS-TOTAL-EMP
       ADD  LOC-TOTAL-EARN TO WS-TOTAL-EARN         
       ADD  LOC-TOTAL-DEDN TO WS-TOTAL-DEDN 
       ADD  LOC-TOTAL-SAL TO WS-TOTAL-SAL
       MOVE ZERO TO LOC-TOTALS
       MOVE ZERO TO LOC-TOTAL-EARN
       MOVE ZERO TO LOC-TOTAL-DEDN
       MOVE ZERO TO LOC-TOTAL-SAL     
  4000-TOTAL-PARA.                                   
        WRITE OUT-RECORD FROM LAST-DISPLAY.          
  9000-END-PARA.                                     
        PERFORM TECH-CHANGE-PARA
        PERFORM LOC-CHANGE-PARA
        PERFORM 4000-TOTAL-PARA.                     
        CLOSE EMPLOYEE-FILE.                         
        CLOSE OUT-FILE.


****************************       
     
13] CREATING KSDS-MASTER FILE

     IDENTIFICATION DIVISION.
 PROGRAM-ID. KSDSCRTE.
 ENVIRONMENT DIVISION.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT EMP-FILE-IN ASSIGN TO 'EMPFILE.DAT'.   
     SELECT WORK-FILE ASSIGN TO 'WORKFILE.DAT'.
     SELECT EMPLOYEE-FILE ASSIGN TO 'TEMPFILE.DAT' 
       ORGANIZATION IS SEQUENTIAL
         ACCESS MODE IS SEQUENTIAL
         FILE STATUS IS WS-EMP-STAT.
     SELECT EMPLOYEE-MASTER ASSIGN TO 'EMPMAST.DAT'    
         ORGANIZATION IS INDEXED
         ACCESS MODE IS SEQUENTIAL
         RECORD KEY IS EMP-ID
         FILE STATUS IS WS-MAST-STAT.
 DATA DIVISION.        
 FILE SECTION.
 FD EMP-FILE-IN
     RECORD CONTAINS 50 CHARACTERS
     RECORDING MODE IS F.
 01 EMP-RECORD.    
    03 IN-EMP-ID        PIC X(05). 
    03 FILLER           PIC X(45).
 SD WORK-FILE.   
 01 WORK-RECORD.
    03 W-EMP-ID         PIC X(05).
    03 FILLER           PIC X(45).
 FD EMPLOYEE-FILE
     RECORD CONTAINS 50 CHARACTERS
     RECORDING MODE IS F.    
 01  EMPLOYEE-RECORD PIC X(50).    
 FD  EMPLOYEE-MASTER
     RECORD CONTAINS 50 CHARACTERS
     RECORDING MODE IS F.
 01 MASTER-RECORD.    
     03 emp-id     PIC X(05).
     03 EMP-NAME   PIC X(15).
     03 EMP-LOC    PIC X(03).
     03 EMP-DOB    PIC X(08). 
     03 EMP-TECH   PIC X(05).
     03 EMP-EARN   PIC 9(05)V99.
     03 EMP-DEDN   PIC 9(05)V99.
 WORKING-STORAGE SECTION.    
 01 WS-VARIABLES.
   03 WS-FILE-FLAG    PIC X(01) VALUE 'N'.
     88 END-OF-FILE             VALUE 'Y'. 
   03 WS-EMP-STAT     PIC X(02) VALUE SPACES. 
   03 WS-MAST-STAT    PIC X(02) VALUE SPACES.
   03 RECS-READ       PIC 9(02) VALUE ZERO.
   03 RECS-WRITTEN    PIC 9(02) VALUE ZERO.
 PROCEDURE DIVISION.   
 0000-MAIN-PARA.
     PERFORM 1000-INIT-PARA                     
     PERFORM 2000-PROCESS-PARA UNTIL END-OF-FILE
     PERFORM 9000-END-PARA
     STOP RUN.  
 1000-INIT-PARA.                                                
       PERFORM 1111-SORT-PARA                                   
       OPEN input employee-file.                                 
       DISPLAY 'EMP OPEN FS', WS-EMP-STAT
       OPEN OUTPUT EMPLOYEE-MASTER.                                    
       DISPLAY 'REP OPEN FS', WS-MAST-STAT
       PERFORM 1500-READ-PARA.
                                
 1111-SORT-PARA.     
      SORT WORK-FILE
      ON ASCENDING KEY W-EMP-ID
      USING EMP-FILE-IN
      GIVING EMPLOYEE-FILE.
 1500-READ-PARA.     
      READ EMPLOYEE-FILE 
      AT END 
         MOVE 'Y' TO WS-FILE-FLAG
      NOT AT END   
         ADD 1 TO RECS-READ
      END-READ.   
 2000-PROCESS-PARA.     
      WRITE MASTER-RECORD FROM EMPLOYEE-RECORD 
      ADD 1 TO RECS-WRITTEN
      PERFORM 1500-READ-PARA.
 9000-END-PARA.     
      DISPLAY 'RECS READ =', RECS-READ
      DISPLAY 'RECS WRITTEN -', RECS-WRITTEN 
      CLOSE EMPLOYEE-FILE, EMPLOYEE-MASTER.
 

***********************
14] SERACH EMPLOYEE-ID AND SEARCH EMPLOYEE'S RECORD: 
     
 IDENTIFICATION DIVISION.
 PROGRAM-ID. PROG015.
 ENVIRONMENT DIVISION.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT EMPLOYEE-MASTER ASSIGN TO 'EMPMAST.DAT'
     ORGANIZATION IS INDEXED
     ACCESS MODE IS RANDOM
     RECORD KEY IS EMP-ID
     FILE STATUS IS WS-EMP-STAT. 
          
     SELECT INPUT-FILE ASSIGN TO 'INPUT.DAT'
     ORGANIZATION IS SEQUENTIAL
     ACCESS MODE IS SEQUENTIAL
     FILE STATUS IS WS-INP-STAT.    
 DATA DIVISION.    
 FILE SECTION.
 FD EMPLOYEE-MASTER
     RECORD CONTAINS 50 CHARACTERS.
 01 MASTER-RECORD.   
    03 EMP-ID       PIC 9(05).
    03 EMP-NAME      PIC X(15). 
    03 emp-loc       pic x(03).
    03 emp-dob       pic x(08).
    03 emp-tech      pic x(05).
    03 emp-earn      pic 9(05)v99.
    03 emp-DEDN      pic 9(05)v99.
 fd input-file   
     RECORD CONTAINS 5 CHARACTERS 
     RECORDING MODE IS F.
 01 INPUT-RECORD PIC X(05).   
 WORKING-STORAGE SECTION.
 01 WS-VARIABLES.
    03 WS-FILE-FLAG   PIC X(01) VALUE 'N'.
      88 END-OF-FILE            VALUE 'Y'.   
    03 WS-EMP-FLAG    PIC X(01) VALUE 'N'. 
      88 EMP-FOUND              VALUE 'Y'.     
    03 EMP-VALID      PIC 9(02) VALUE ZERO.  
    03 EMP-INVALID    PIC 9(02) VALUE ZERO.
    
    03 TOT-RECS       PIC 9(02) VALUE ZERO.
    03 WS-EMP-STAT    PIC X(02) VALUE SPACES.
    03 WS-INP-STAT    PIC X(02) VALUE SPACES.
 PROCEDURE DIVISION.
 0000-MAIN-PARA.
     PERFORM 1000-INIT-PARA.
     PERFORM 2000-PROCESS-PARA UNTIL END-OF-FILE
     PERFORM 9000-END-PARA
     STOP RUN.
 1000-INIT-PARA.    
     OPEN INPUT EMPLOYEE-MASTER
     DISPLAY 'EMP OPEN FS', WS-EMP-STAT
     OPEN INPUT INPUT-FILE.
     DISPLAY 'REP OPEN FS', WS-INP-STAT
     PERFORM 1500-READ-PARA.
 1500-READ-PARA.    
     READ INPUT-FILE
        AT END
           MOVE 'Y' TO WS-FILE-FLAG 
        NOT AT END   
         ADD 1 TO TOT-RECS
     END-READ.    
 2000-PROCESS-PARA.    
     PERFORM 2500-READ-MASTER
     IF EMP-FOUND
         DISPLAY 'EMP=>', MASTER-RECORD 
         ADD 1 TO EMP-VALID
     ELSE    
         DISPLAY 'INVALID EMPLOYEE ID', INPUT-RECORD
         ADD 1 TO EMP-INVALID
     END-IF    
     PERFORM 1500-READ-PARA.
 2500-READ-MASTER.    
     MOVE INPUT-RECORD TO EMP-ID
     READ EMPLOYEE-MASTER
        INVALID KEY 
         MOVE 'N' TO WS-EMP-FLAG
        NOT INVALID KEY 
         MOVE 'Y' TO WS-EMP-FLAG
     END-READ.    
 9000-END-PARA.    
     DISPLAY 'TOTAL RECORDS=', TOT-RECS
     DISPLAY  'VALID EMP IDS=', EMP-VALID 
     DISPLAY  'INVALID EMP IDS=', EMP-INVALID
     CLOSE EMPLOYEE-MASTER, INPUT-FILE.
     
***********************  
 
 
                     

